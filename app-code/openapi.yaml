openapi: 3.0.0
info:
  description: "API for managing Formula One fans, drivers, teams, races, and results."
  title: Formula One Fan API
  version: 1.0.0
servers:
- url: https://api.formulafan.com
security:
- bearerAuth: []
tags:
- description: Operations related to drivers
  name: Drivers
- description: Operations related to teams
  name: Teams
- description: Operations related to races
  name: Races
- description: Operations related to results
  name: Results
paths:
  /drivers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Driver"
                type: array
          description: A list of drivers
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Get all drivers
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Driver"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
          description: Created
        "400":
          description: Bad request
        "500":
          description: Internal server error
      summary: Create a new driver
  /drivers/{driverId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: driverId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          description: Deleted
        "401":
          description: Unauthorized
        "404":
          description: Driver not found
        "500":
          description: Internal server error
      summary: Delete a driver by ID
    get:
      parameters:
      - explode: false
        in: path
        name: driverId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
          description: A driver
        "401":
          description: Unauthorized
        "404":
          description: Driver not found
        "500":
          description: Internal server error
      summary: Get a driver by ID
    put:
      parameters:
      - explode: false
        in: path
        name: driverId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Driver"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Driver"
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Driver not found
        "500":
          description: Internal server error
      summary: Update a driver by ID
  /teams:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Team"
                type: array
          description: A list of teams
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Get all teams
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
          description: Created
        "400":
          description: Bad request
        "500":
          description: Internal server error
      summary: Create a new team
  /teams/{teamId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          description: Deleted
        "401":
          description: Unauthorized
        "404":
          description: Team not found
        "500":
          description: Internal server error
      summary: Delete a team by ID
    get:
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
          description: A team
        "401":
          description: Unauthorized
        "404":
          description: Team not found
        "500":
          description: Internal server error
      summary: Get a team by ID
    put:
      parameters:
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Team not found
        "500":
          description: Internal server error
      summary: Update a team by ID
  /races:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Race"
                type: array
          description: A list of races
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
      summary: Get all races
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Race"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Race"
          description: Created
        "400":
          description: Bad request
        "500":
          description: Internal server error
      summary: Create a new race
  /races/{raceId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: raceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "204":
          description: Deleted
        "401":
          description: Unauthorized
        "404":
          description: Race not found
        "500":
          description: Internal server error
      summary: Delete a race by ID
    get:
      parameters:
      - explode: false
        in: path
        name: raceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Race"
          description: A race
        "401":
          description: Unauthorized
        "404":
          description: Race not found
        "500":
          description: Internal server error
      summary: Get a race by ID
    put:
      parameters:
      - explode: false
        in: path
        name: raceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Race"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Race"
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Race not found
        "500":
          description: Internal server error
      summary: Update a race by ID
  /races/{raceId}/results:
    get:
      parameters:
      - explode: false
        in: path
        name: raceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Result"
                type: array
          description: A list of results for the race
        "401":
          description: Unauthorized
        "404":
          description: Race not found
        "500":
          description: Internal server error
      summary: Get results for a race by ID
    post:
      parameters:
      - explode: false
        in: path
        name: raceId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Result"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
          description: Created
        "400":
          description: Bad request
        "404":
          description: Race not found
        "500":
          description: Internal server error
      summary: Create a new result for a race
components:
  schemas:
    Driver:
      example:
        nationality: nationality
        teamId: 6
        name: name
        id: 0
      properties:
        id:
          title: id
          type: integer
        name:
          title: name
          type: string
        nationality:
          title: nationality
          type: string
        teamId:
          format: int32
          title: teamId
          type: integer
      required:
      - id
      - name
      - nationality
      - teamId
      title: Driver
      type: object
    Team:
      example:
        country: country
        name: name
        id: 0
      properties:
        id:
          title: id
          type: integer
        name:
          title: name
          type: string
        country:
          title: country
          type: string
      required:
      - country
      - id
      - name
      title: Team
      type: object
    Race:
      example:
        date: 2000-01-23
        circuit: circuit
        name: name
        id: 0
      properties:
        id:
          title: id
          type: integer
        name:
          title: name
          type: string
        circuit:
          title: circuit
          type: string
        date:
          format: date
          title: date
          type: string
      required:
      - circuit
      - date
      - id
      - name
      title: Race
      type: object
    Result:
      example:
        driverId: 6
        teamId: 1
        id: 0
        position: 5
        points: 5
      properties:
        id:
          title: id
          type: integer
        driverId:
          format: int32
          title: driverId
          type: integer
        teamId:
          format: int32
          title: teamId
          type: integer
        position:
          title: position
          type: integer
        points:
          title: points
          type: integer
      required:
      - driverId
      - id
      - points
      - position
      - teamId
      title: Result
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
